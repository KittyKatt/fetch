name: Package and Release

on:
  push:
    tags:
      - 'v*.*.*'
      - 'v*.*'

env:
  APP_NAME: 'fetch'
  MAINTAINER: 'Brett Bohnenkamper <kittykatt@kittykatt.co>'
  DESC: 'fetch is a BASH screenshot, system information, and distribution ASCII logo display tool.'
  HOMEPAGE: 'https://github.com/KittyKatt/fetch'

jobs:
  build-debian-package:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: FranzDiebold/github-env-vars-action@v2
      - name: Create package structure
        run: |
          mkdir -p deb_pkg/usr/share/fetch
          mkdir -p deb_pkg/usr/local/bin
          cp -r ascii lib deb_pkg/usr/share/fetch/
          cp LICENSE README.md deb_pkg/usr/share/fetch/
          cp sample.config.conf deb_pkg/usr/share/fetch/config.conf
          cp fetch.sh deb_pkg/usr/local/bin/fetch
      - name: Build some variables to use
        run: |
          PVERSION=${{ env.CI_REF_NAME }}
          echo "PVERSION=${PVERSION//v/}" >> ${GITHUB_ENV}
          echo PDEPENDS="-d 'bash (>4)' -d 'awk' -d 'pciutils' -d 'procps'" >> $GITHUB_ENV
      - name: Run NPM to create Debian package
        uses: bpicode/github-action-fpm@master
        id: deb_build
        with:
          fpm_args: './'
          fpm_opts: "--log warn -t deb -a all -n ${{ env.APP_NAME }} -v ${{ env.PVERSION }} -m \"${{ env.MAINTAINER }}\" --description \"${{ env.DESC }}\" --url \"${{ env.HOMEPAGE }}\" --license MIT --category 'Utils' --deb-priority 'extra' ${{ env.PDEPENDS }} -C deb_pkg -s dir"
      - name: Check output files
        run: |
          ls -l *.deb
          echo "Package information:"
          dpkg -I *.deb
          echo "Package contents:"
          dpkg -c *.deb
      - name: Upload DPKG artifact
        uses: actions/upload-artifact@v2
        with:
          name: artifact-deb
          path: |
            ./*.deb
  build-rpm-package:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: FranzDiebold/github-env-vars-action@v2
      - name: Install RPM tools
        run: |
          sudo apt update
          sudo apt install -y rpm
      - name: Create package structure
        run: |
          mkdir -p rpm_pkg/usr/share/fetch
          mkdir -p rpm_pkg/usr/local/bin
          cp -r ascii lib rpm_pkg/usr/share/fetch/
          cp LICENSE README.md rpm_pkg/usr/share/fetch/
          cp sample.config.conf rpm_pkg/usr/share/fetch/config.conf
          cp fetch.sh rpm_pkg/usr/local/bin/fetch
      - name: Build some variables to use
        run: |
          PVERSION=${{ env.CI_REF_NAME }}
          echo "PVERSION=${PVERSION//v/}" >> ${GITHUB_ENV}
          echo PDEPENDS="-d 'bash>=4.0' -d 'awk' -d 'pciutils' -d 'coreutils' -d 'grep'" >> $GITHUB_ENV
      - name: Run NPM to create Red Hat package
        uses: bpicode/github-action-fpm@master
        id: rpm_build
        with:
          fpm_args: './'
          fpm_opts: "--log warn -t rpm -a noarch -n ${{ env.APP_NAME }} -v ${{ env.PVERSION }} -m \"${{ env.MAINTAINER }}\" --description \"${{ env.DESC }}\" --url \"${{ env.HOMEPAGE }}\" --license MIT --category 'Productivity/Text/Utilities' ${{ env.PDEPENDS }} -C rpm_pkg -s dir"
      - name: Check output files
        run: |
          ls -l *.rpm
          echo "Packing Information:"
          rpm -qip *.rpm
          echo "Packge Dependencies:"
          rpm -qRp *.rpm
          echo "Package Contents:"
          rpm -qlp *.rpm
      - name: Upload RPM artifact
        uses: actions/upload-artifact@v2
        with:
          name: artifact-rpm
          path: |
            ./*.rpm

  create-release:
    runs-on: ubuntu-latest
    needs:
      - build-debian-package
      - build-rpm-package
    steps:
      - uses: actions/checkout@v1
      - name: Generate changelog
        run: |
          wget https://github.com/git-chglog/git-chglog/releases/download/0.9.1/git-chglog_linux_amd64
          chmod +x git-chglog_linux_amd64
          mv git-chglog_linux_amd64 git-chglog
          ./git-chglog --output ./changelog $(git describe --tags $(git rev-list --tags --max-count=1))
      - uses: actions/download-artifact@v2
        name: Download package artifacts
      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          body_path: ./changelog
          tag_name: ${{ github.ref }}
          name: ${{ github.ref }}
          draft: false
          prerelease: false
          files: |
            artifact-rpm/*.rpm
            artifact-deb/*.deb
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}